@model Stack.Models.AccountModel
@using CaptchaMvc.HtmlHelpers;
@{
    ViewBag.Title = "Sign up";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <div class="row row-bottom-padded-md" style="margin: 0 auto">
        <div class="col-md-12 section-heading text-center">
            <h2 class="to-animate fadeInUp animated">New User Registration</h2>
            <div class="row">
                <div class="col-md-8 col-md-offset-2 subtext">
                    <h3 class="to-animate fadeInUp animated"></h3>
                </div>
            </div>
        </div>
        <div class="col-md-2"></div>
        <div class="col-md-8">
            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "sky-form", role = "form", @id = "frmRegister" }))
            {
                <fieldset>
                    <section>
                        @Html.ValidationSummary(false)
                    </section>
                    <section>
                        <label class="input">
                            <i class="icon-append fa fa-envelope"></i>
                            @*<input placeholder="Email address" type="text">*@
                            @Html.TextBoxFor(m => m.Email, new { @placeholder = "Email address", @class = "form-control", @id = "txtEmail" })
                            <b class="tooltip tooltip-bottom-right">Needed to verify your account</b>
                            @Html.ValidationMessageFor(model => model.Email)
                        </label>
                        @*<div class="cssload-square" style="float:left">
                                <div class="cssload-square-part cssload-square-green"></div>
                                <div class="cssload-square-part cssload-square-pink"></div>
                                <div class="cssload-square-blend"></div>
                            </div>*@
                    </section>
                    <section>
                        <label class="input">
                            <i class="icon-append fa-lock"></i>
                            @Html.PasswordFor(m => m.Password, new { @placeholder = "Password", @class = "form-control" })
                            <b class="tooltip tooltip-bottom-right">Password must be has one capital letter and one special character</b>
                            @Html.ValidationMessageFor(model => model.Password)
                        </label>
                    </section>

                    <section>
                        <label class="input">
                            <i class="icon-append fa-lock"></i>
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @placeholder = "Confirm Password", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword)
                        </label>
                    </section>
                </fieldset>

                <fieldset>
                    <div class="row">
                        <section class="col col-6">
                            <label class="input">
                                @Html.TextBoxFor(m => m.FirstName, new { @placeholder = "First Name", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.FirstName)
                            </label>
                        </section>
                        <section class="col col-6">
                            <label class="input">
                                @Html.TextBoxFor(m => m.LastName, new { @placeholder = "Last Name", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.LastName)
                            </label>
                        </section>
                    </div>
                    <section>
                        Male : @Html.RadioButton("Gender", "Male")
                        Female : @Html.RadioButton("Gender", "Female")
                        @*<select id="GenderId">
                                <option value="">Please Select Gender</option>
                                <option value="0">Male</option>
                                <option value="1">Female</option>
                            </select>*@
                        @*@Html.ValidationMessageFor(model => model.GenderId)*@
                        <span id="errGender" style="display:none" class="field-validation-error"><span>Please select gender.</span></span>
                        <i></i>
                    </section>
                    @*<section>
                            <label class="select">
                                <input type="file" />
                                <i></i>
                            </label>
                        </section>*@
                    <section>
                        <label class="checkbox"><input id="TermsOfConditions" type="checkbox"><i></i>I agree to the Terms of Service</label>
                        @*<label class="checkbox"><input id="SpecialOffers" type="checkbox"><i></i>I want to receive news and special offers</label>*@
                        <span id="errTermsOfConditions" style="display:none" class="field-validation-error"><span>Please select terms & conditions.</span></span>
                    </section>
                    <section>
                        @Html.Captcha(4)
                    </section>
                </fieldset>

                <footer>
                    <button type="submit" id="btnRegister" class="button">Register</button>
                </footer>
            }
        </div>
    </div>
</div>
<script type="text/javascript">
    $("#btnRegister").click(function () {
        var valid = true;
        if ($("#GenderId").val() == "") {
            $("#errGender").show();
            valid = false;
        } else {
            $("#errGender").hide();
        }
        if ($('#TermsOfConditions').is(":checked") == false) {
            //Lobibox.notify('error', {
            //    size: 'mini',
            //    showClass: 'fadeInDown',
            //    hideClass: 'fadeUpDown',
            //    msg: 'Please select checkbox.'
            //});
            $('#frmRegister').valid();
            $(".validation-summary-errors").hide();
            $("#errTermsOfConditions").show();
            valid = false;
        } else {
            $("#errTermsOfConditions").hide();
        }
        if (valid == false)
            return false;
    });
    //$("#txtEmail").keypress(function () {
    //    $.ajax({
    //        type: "GET",
    //        url: "/Account/IsUserAlereadyExists?eMail=" + $(this).val(),
    //        success: function (data) {
    //            if (data.toLowerCase() = 'true') {

    //            }
    //        }
    //    });
    //});
    $("#txtEmail").blur(function () {
        $.ajax({
            type: "GET",
            url: "/Account/IsUserAlereadyExists?eMail=" + $(this).val(),
            success: function (data) {
                if (data.toLowerCase() == 'true') {
                    $("#txtEmail").val("");
                    Lobibox.notify('warning', {
                        size: 'mini',
                        showClass: 'fadeInDown',
                        hideClass: 'fadeUpDown',
                        msg: 'User already registered.'
                    });
                }
            }
        });
    });
</script>